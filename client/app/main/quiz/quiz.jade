.quiz(ng-class="{ 'quiz--freezed': quiz.freezed }", ng-click="quiz.next()")
  .quiz__step.animated(ng-if="quiz.is('INTRO')")
    h2.quiz__step__heading
      div.small(ng-bind-html="'quiz.step.heading.0a' | translate:{ total: main.totalAds }")
      div(ng-bind-html="'quiz.step.heading.0b' | translate")
    .text-center
      button.btn.btn-lg.btn-outline
        | {{ 'quiz.step.start' | translate }}
            
  .quiz__step.animated(ng-if="quiz.is('INTRO_CONFIRM')")
    h2.quiz__step__heading(ng-bind-html="'quiz.step.heading.1' | translate")
    .text-center
      button.btn.btn-lg.btn-outline
        | {{ 'quiz.step.yes' | translate }}
            
  .quiz__step.animated(ng-if="quiz.in('INTRO_QUICK', 'INTRO_QUICK_INTERACT')")
    h2.quiz__step__heading(ng-bind-html="'quiz.step.heading.2' | translate")
    .lead.text-muted.text-center.animated(ng-if="quiz.is('INTRO_QUICK_INTERACT')")
      | {{ 'quiz.step.interact' | translate }}
            
  .quiz__step.animated(ng-if="quiz.is('INTRO_HOW')")
    h2.quiz__step__heading(ng-bind-html="'quiz.step.heading.3' | translate")
    
  .quiz__step.animated(ng-if="quiz.is('INTRO_SIZE')")
    h2.quiz__step__heading(ng-bind-html="'quiz.step.heading.4' | translate")
          
  .quiz__step.quiz__step--bg(ng-class=" { 'quiz__step--disabled' : quiz.hasForm() } ")
    .quiz__step__scatterplot
      // Empty element to occupy the space
      .quiz__step__scatterplot__dummy
      // Axis group for the living space
      .quiz__step__scatterplot__axis.quiz__step__scatterplot__axis--x 
        // Axis Line on x
        span.quiz__step__scatterplot__axis__line.animated.hopen(ng-if="quiz.in('INTRO_SIZE')")
        span.quiz__step__scatterplot__axis__ticks.animated(ng-if="quiz.in('INTRO_SIZE')")
          span.quiz__step__scatterplot__axis__ticks__tick(ng-repeat="t in quiz.xticks() track by $index") 
            span.quiz__step__scatterplot__axis__ticks__tick__wrap 
              | {{ t }} 
              span(ng-show="$last")&nbsp;m²
      
  .quiz__step.animated(ng-if="quiz.is('INTRO_RENT')")
    h2.quiz__step__heading(ng-bind-html="'quiz.step.heading.5' | translate: { currency: (quiz.currency.use() | currencySymbol) }")
          
  .quiz__step.quiz__step--bg(ng-class=" { 'quiz__step--disabled' : quiz.hasForm() } ")
    .quiz__step__scatterplot
      // Axis group for the total rent
      .quiz__step__scatterplot__axis.quiz__step__scatterplot__axis--y
        // Axis Line on y
        span.quiz__step__scatterplot__axis__line.animated.vopen(ng-if="quiz.in('INTRO_RENT')")
        span.quiz__step__scatterplot__axis__ticks.animated(ng-if="quiz.in('INTRO_RENT')")
          span.quiz__step__scatterplot__axis__ticks__tick(ng-repeat="t in quiz.yticks() track by $index")
            span.quiz__step__scatterplot__axis__ticks__tick__wrap 
              | {{ t }}
              span(ng-show="$last")&nbsp;{{ quiz.currency.use() | currencySymbol }}
            
  .quiz__step.animated(ng-if="quiz.is('INTRO_CLEAR')")
    h2.quiz__step__heading(ng-bind-html="'quiz.step.heading.6a' | translate")
            
  .quiz__step.animated(ng-if="quiz.is('INTRO_CHEAP')")
    .quiz__step__scatterplot
      h2.quiz__step__heading.quiz__step__heading--blc
        span(ng-bind-html="'quiz.step.heading.6b' | translate")
            
  .quiz__step.animated(ng-if="quiz.is('INTRO_EXPENSIVE')")
    .quiz__step__scatterplot
      h2.quiz__step__heading.quiz__step__heading--trc
        span(ng-bind-html="'quiz.step.heading.6c' | translate")
            
  .quiz__step.animated(ng-if="quiz.is('INTRO_DREAMS')")  
    .quiz__step__scatterplot
      h2.quiz__step__heading.quiz__step__heading--brc
        span(ng-bind-html="'quiz.step.heading.6d' | translate")
        
  .quiz__step.animated(ng-if="quiz.is('INTRO_ALL_FLATS')")
    h2.quiz__step__heading
      span(ng-bind-html="'quiz.step.heading.7' | translate")
            
  .quiz__step.quiz__step--bg.animated(ng-if="quiz.in('INTRO_ALL_FLATS')", ng-class="{ 'quiz__step--disabled' : quiz.hasForm(), 'quiz__step--muted': quiz.in('ADDR_FEEDBACK')} ")
    // The plot itself!
    .quiz__step__scatterplot
      img.quiz__step__scatterplot__chart(ng-src="/api/docs/all.png")
        
  .quiz__step.animated(ng-if="quiz.is('INTRO_AVERAGE')")
    h2.quiz__step__heading(ng-bind-html="'quiz.step.heading.8' | translate")
        
  .quiz__step.quiz__step--bg.animated(ng-if="quiz.in('INTRO_AVERAGE')", ng-class=" { 'quiz__step--disabled' : quiz.hasForm(), 'quiz__step--muted': quiz.in('ADDR_FEEDBACK')} ")
    // The regression line
    .quiz__step__scatterplot
      img.quiz__step__scatterplot__chart(ng-src="{{ :: quiz.losRegression() }}")    
          
  .quiz__step.animated(ng-if="quiz.in('INPUT_HOW_MUCH', 'DONT_BE_SHY')")
    form.quiz__step__form(name="form", ng-submit="quiz.submit()")
      label.control-label(for="inputrent")
        span(ng-bind-html="'quiz.step.how-much.label' | translate")
      .row
        .col-sm-9
          .form-group.form-group-lg
              .input-group
                input.form-control.input-lg(type='number', min="100", max="80000", id="inputrent", ng-model='quiz.rent', required='required', placeholder="{{ 'quiz.step.how-much.placeholder' | translate }}")
                span.input-group-addon.quiz__step__form__dropdown(uib-dropdown)
                  a(uib-dropdown-toggle)
                    | {{ quiz.currency.use() | currencySymbol }}
                    span &nbsp;<i class="caret"></i>
                  ul.dropdown-menu.dropdown-menu-right.quiz__step__form__dropdown__menu(uib-dropdown-menu)
                    li(ng-repeat="(currency, value) in quiz.currencies", 
                       ng-class="{ 'active': quiz.currency.is(currency) }",
                       ng-click="quiz.currency.use(currency)")
                      a {{ currency | currencySymbol }}
        .col-sm-3
          button.btn.btn-lg.btn-primary.btn-block(type="submit", ng-disabled="form.$invalid") {{ 'quiz.step.continue' | translate }}  
              
      strong.animated(ng-if="quiz.is('DONT_BE_SHY')") {{ 'quiz.step.how-much.shy' | translate }}
  
  .quiz__step.animated(ng-if="quiz.in('RENT_FEEDBACK', 'INPUT_HOW_BIG')", ng-class="{ 'quiz__step--disabled' : quiz.hasForm() }")
    // User rent level (without knowing the living space)
    .quiz__step__scatterplot
      .quiz__step__scatterplot__user-rent-part(ng-style="{ bottom: quiz.userRentPart() }")
    
  .quiz__step.animated(ng-if="quiz.is('RENT_FEEDBACK')")
    h2.quiz__step__heading(ng-show=":: quiz.userRentFeedback().is(0)")
      span(ng-bind-html="'quiz.step.rent-feedback.0' | translate")
    h2.quiz__step__heading(ng-show=":: quiz.userRentFeedback().is(1)")
      span(ng-bind-html="'quiz.step.rent-feedback.1' | translate")
    h2.quiz__step__heading(ng-show=":: quiz.userRentFeedback().is(2)")
      span(ng-bind-html="'quiz.step.rent-feedback.2' | translate")
    h2.quiz__step__heading(ng-show=":: quiz.userRentFeedback().is(3)")
      span(ng-bind-html="'quiz.step.rent-feedback.3' | translate")
    
  .quiz__step.animated(ng-if="quiz.is('INPUT_HOW_BIG')")    
    form.quiz__step__form(name="form", ng-submit="quiz.submit()")
      label.control-label(for="inputaddr")
        span(ng-bind-html="'quiz.step.how-big.label' | translate")
      .row
        .col-sm-9
          .form-group.form-group-lg
              .input-group
                input.form-control.input-lg(type='number', min="1", max="300", id="inputaddr", ng-model='quiz.space', required='required', placeholder="{{ 'quiz.step.how-big.placeholder' | translate }}")
                span.input-group-addon m²
        .col-sm-3
          button.btn.btn-lg.btn-primary.btn-block(type="submit", ng-disabled="form.$invalid") {{ 'quiz.step.continue' | translate }}
          
  .quiz__step.animated(ng-if="quiz.is('SPACE_FEEDBACK')")
    h2.quiz__step__heading(ng-show=":: quiz.userGlobalFeedback().is(0)")
      span(ng-bind-html="'quiz.step.space-feedback.0' | translate: { times: quiz.userGlobalFeedback().times }")
    h2.quiz__step__heading(ng-show=":: quiz.userGlobalFeedback().is(1)")
      span(ng-bind-html="'quiz.step.space-feedback.1' | translate: { percentage: quiz.userGlobalFeedback().percentage }")
    h2.quiz__step__heading(ng-show=":: quiz.userGlobalFeedback().is(2)")
      span(ng-bind-html="'quiz.step.space-feedback.2' | translate")
    h2.quiz__step__heading(ng-show=":: quiz.userGlobalFeedback().is(3)")
      span(ng-bind-html="'quiz.step.space-feedback.3' | translate")
    h2.quiz__step__heading(ng-show=":: quiz.userGlobalFeedback().is(4)")
      span(ng-bind-html="'quiz.step.space-feedback.4' | translate")
    
  .quiz__step.quiz__step--bg.animated(ng-if="quiz.in('SPACE_FEEDBACK')", ng-class=" { 'quiz__step--disabled' : quiz.hasForm() } ")  
    .quiz__step__scatterplot
      .quiz__step__scatterplot__user-point(ng-style="quiz.userPoint()")
     
  .quiz__step.animated(ng-if="quiz.is('INPUT_ADDR')")    
    form.quiz__step__form(name="form", ng-submit="quiz.geocode(quiz.addr)")
      p(ng-bind-html="'quiz.step.addr.heading' | translate")
      label.control-label(for="inputaddr")
        span(ng-bind-html="'quiz.step.addr.label' | translate")
      .row
        .col-sm-9
          input.form-control.input-lg(type='text', id="inputaddr", ng-model='quiz.addr', required='required', ng-disabled="quiz.freezed" placeholder="")                
        .col-sm-3
          button.btn.btn-lg.btn-primary.btn-block(type="submit", ng-disabled="form.$invalid || quiz.freezed")
            span(ng-bind-html="'quiz.step.continue' | translate")
    p.text-warning.t-sm(ng-show="quiz.centerError")
      | <i class="fa fa-warning"></i>
      span(ng-bind-html="'quiz.step.addr.error' | translate")&nbsp;      
      a.text-warning(ng-click="quiz.step = quiz.stepIndex('ASK_DATA')") 
        | {{ "quiz.step.addr.ignore" | translate }}
            
  .quiz__step.quiz__step--bg.animated(ng-if="quiz.in('ADDR_FEEDBACK') && quiz.centerStats", ng-class=" { 'quiz__step--disabled' : quiz.hasForm() } ") 
    .quiz__step__scatterplot
      img.quiz__step__scatterplot__chart(ng-src="/api/docs/center.png?latlng={{ quiz.center.join(',') }}")
      span.quiz__step__scatterplot__legend
        span(ng-bind-html="'quiz.step.addr.legend' | translate: { total: quiz.centerStats.total, country: quiz.address.country, city: quiz.address.city || quiz.address.city_district || quiz.address.state }")
    
  .quiz__step.animated(ng-if="quiz.is('ADDR_FEEDBACK') && quiz.centerStats && !quiz.hasEnded")  
    h2.quiz__step__heading(ng-show=":: quiz.userCenterFeedback().is(0)")
      span(ng-bind-html="'quiz.step.addr-feedback.0' | translate")
    h2.quiz__step__heading(ng-show=":: quiz.userCenterFeedback().is(1)")
      span(ng-bind-html="'quiz.step.addr-feedback.1' | translate")
    h2.quiz__step__heading(ng-show=":: quiz.userCenterFeedback().is(2)")
      span(ng-bind-html="'quiz.step.addr-feedback.2' | translate")
    h2.quiz__step__heading(ng-show=":: quiz.userCenterFeedback().is(3)")
      span(ng-bind-html="'quiz.step.addr-feedback.3' | translate")
      
  .quiz__step.quiz__step--bg.animated(ng-if="quiz.in('ADDR_FEEDBACK') && quiz.centerStats", ng-class=" { 'quiz__step--disabled' : quiz.hasForm() } ") 
    // The regression line
    .quiz__step__scatterplot
      img.quiz__step__scatterplot__chart(ng-src="{{ quiz.userLosRegression() }}")   
      
  .quiz__step.animated(ng-if="quiz.in('ASK_DATA', 'MAKE_US_HAPPY')")
    h2.quiz__step__heading(ng-bind-html="'quiz.step.heading.9' | translate")
    .text-center
      button.btn.btn-lg.btn-default(ng-click="quiz.step = quiz.stepIndex('SHARE')")
        | {{ 'quiz.step.save.no' | translate }}    
      =" "
      button.btn.btn-lg.btn-primary(ng-click="quiz.step = quiz.stepIndex('DATA_FORM')")
        | {{ 'quiz.step.save.yes' | translate }}
        
      div.animated.quiz__step__happy(ng-if="quiz.is('MAKE_US_HAPPY')") {{ 'quiz.step.save.happy' | translate }}
      
  .quiz__step.animated(ng-if="quiz.is('DATA_FORM')")
    form.quiz__step__form.form-horizontal(name="save", 
      ng-submit="quiz.save(user)", 
      ng-init="user = { total_rent: quiz.rent, living_space: quiz.space, address: quiz.addr, currency: quiz.currency.use() }")      
      .form-group
        .col-sm-5.control-label
          label(for="input-save-move-in", ng-bind-html="'quiz.step.save.move-in.label' | translate")
        .col-sm-7
          select.form-control(id="input-save-move-in", ng-model="user.move_in", 
            ng-options="m.dt as (m.dt | date:'MMMM' )  group by m.year for m in :: quiz.moveInRange")
            option(value="") --
      .form-group
        .col-sm-5.control-label
          label(for="input-save-rent", ng-bind-html="'quiz.step.save.rent.label' | translate")
          .small.text-muted(ng-bind-html="'quiz.step.save.rent.help' | translate")
        .col-sm-7          
          .input-group
            input.form-control(type='number', min="100", max="80000", id="input-save-rent", ng-model="user.total_rent", required='required', placeholder="{{ 'quiz.step.how-much.placeholder' | translate }}")
            span.input-group-addon(ng-bind-html="quiz.currency.use() | currencySymbol")
      .form-group
        .col-sm-5.control-label
          label(for="input-save-space", ng-bind-html="'quiz.step.save.space.label' | translate")
        .col-sm-7        
          .input-group
            input.form-control(type="number", id="input-save-space", min="1", max="300", ng-model="user.living_space", required='required', placeholder="{{ 'quiz.step.how-big.placeholder' | translate }}")
            span.input-group-addon(ng-bind-html="'quiz.step.how-big.unit' | translate")
      .form-group
        .col-sm-5.control-label
          label(for="input-save-addr", ng-bind-html="'quiz.step.save.addr.label' | translate")
          .small.text-muted(ng-bind-html="'quiz.step.save.addr.help' | translate")
        .col-sm-7
          input.form-control(type="text", id="input-save-addr", ng-model="user.address")
      .form-group        
        .col-sm-7.col-sm-offset-5
          button.btn.btn-primary(type="submit", ng-disabled="save.$invalid")
            | {{ 'quiz.step.save.submit' | translate }}
        
  .quiz__step.quiz__step--share.animated(ng-if="quiz.is('SHARE')")
    h2.quiz__step__heading(ng-show=":: quiz.userFinalFeedback().is(0)")
      span(ng-bind-html="'quiz.step.share-feedback.0' | translate")
    h2.quiz__step__heading(ng-show=":: quiz.userFinalFeedback().is(1)")
      span(ng-bind-html="'quiz.step.share-feedback.1' | translate")
    h2.quiz__step__heading(ng-show=":: quiz.userFinalFeedback().is(2)")
      span(ng-bind-html="'quiz.step.share-feedback.2' | translate")
    ul.list-inline.text-center
      li
        a(socialshare,
          socialshare-text="{{ quiz.userShare() | translate }} {{ quiz.href }}"
          socialshare-provider="twitter",
          socialshare-via="rentswatch",
          socialshare-hashtags="#rentswatch")
          span.fa-stack.fa-lg
            i.fa.fa-square-o.fa-stack-2x.fa-inverse
            i.fa.fa-fw.fa-twitter.fa-stack-1x.fa-inverse
          span.sr-only Twitter
      li 
        a(socialshare,
          socialshare-url="{{ quiz.href }}",
          socialshare-text="{{ quiz.userShare() | translate }}",
          socialshare-caption="{{ 'app.title' | translate }}",
          socialshare-description="{{ 'app.description' | translate }}"
          socialshare-type="feed",
          socialshare-provider="facebook",
          socialshare-via="901779263268056")
          span.fa-stack.fa-lg
            i.fa.fa-square-o.fa-stack-2x.fa-inverse
            i.fa.fa-fw.fa-facebook.fa-stack-1x.fa-inverse
          span.sr-only Facebook
    p.text-center.small
      a(ng-click="quiz.step = quiz.stepIndex('ADDR_FEEDBACK'); $event.stopPropagation()", ng-bind-html="'quiz.step.back-viz' | translate")
  
  // pre {{ quiz.steps[quiz.step] | json }}

.quiz-nav
  .quiz-nav__item.hidden-xs(ng-show="quiz.hasNext()")
    span(ng-bind-html="'quiz.nav.manual' | translate")
     
  .quiz-nav__item.quiz-nav__item--right
    button.btn.btn-primary(ng-disabled="!quiz.hasPrevious()", ng-click="quiz.previous()")
      i.fa.fa-chevron-left
      span.sr-only {{ 'quiz.nav.prev' | translate }}
    span &nbsp;
    button.btn.btn-primary(ng-disabled="!quiz.hasNext()", ng-click="quiz.next()")
      i.fa.fa-chevron-right
      span.sr-only {{ 'quiz.nav.next' | translate }}
      
